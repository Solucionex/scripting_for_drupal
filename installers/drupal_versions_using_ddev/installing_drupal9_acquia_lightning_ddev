#!/bin/bash
# -*- ENCODING: UTF-8 -*-
#
#
#-----------------------------------------------------------------------------------
# 
# Installing a Acquia Lightning Drupal Distro in local environment using Docker/Docker Compose / DDEV 
# [David RodrÃ­guez, @davidjguru] [davidjguru@solucionex.com]
# Title: Drupal Acquia Lightning Installer with DDEV
# Description: Download and install Acquia Lightning codebase in a new environment based in docker - ddev. 
#
# davidjguru@gmail.com
# https://www.therussianlullaby.com
# https://www.solucionex.com
#-----------------------------------------------------------
#

# Gets initial name for new project and makes folder.
echo -e "    \e[1;4;31m1- Getting the new project name...\e[0m"
varkeyname=$1
mkdir $varkeyname

# Builds initial basic structure for DDEV deploy.
echo -e "    \e[1;4;31m2- Building the basic structure for a new Drupal 9 installation...\e[0m"
cd $varkeyname
ddev config --project-type=drupal9 --docroot=docroot --create-docroot
cd .ddev
rm config.yaml
wget https://raw.githubusercontent.com/Solucionex/resources/main/ddevconfig/config.yaml
sed -i "/name:/c\name: $varkeyname" config.yaml


# Gets the Docker Compose file for Portainer in DDEV network.
echo -e "    \e[1;4;31m3- Downloading Docker Compose file for Portainer...\e[0m"
wget https://raw.githubusercontent.com/drud/ddev-contrib/master/docker-compose-services/portainer/docker-compose.portainer.yaml
cd ..

# Inits the DDEV local deploy.
echo -e "    \e[1;4;31m4- Starting up the new local deploy...\e[0m"
ddev start
echo y | ddev composer create acquia/lightning-project

# Creates auxiliary folders.
echo -e "    \e[1;4;31m5- Creating some new auxiliary folders...\e[0m"
mkdir -p scripts backups docs config/sync
cp ../installing_drupal9_acquia_lightning_ddev ./scripts/

# Downloads and prepares libraries for Web Profile.
echo -e "    \e[1;4;31m6- Putting JavaScript libraries in the right place...\e[0m"
mkdir ./docroot/libraries
mkdir ./docroot/libraries/d3
ddev exec wget https://github.com/Solucionex/resources/archive/main.zip
ddev exec unzip main.zip
ddev exec cp -r ./resources-main/highlight ./libraries/
ddev exec mv ./libraries/highlight ./libraries/highlightjs
ddev exec chmod 775 -R ./libraries/highlightjs
ddev exec rm -rf ./resources-main
ddev exec wget https://d3js.org/d3.v3.min.js
ddev exec mv d3.v3.min.js d3.min.js
ddev exec mv d3.min.js ./libraries/d3/

# Changes the location of the config/sync folder.
echo -e "    \e[1;4;31m7- Changing the default location for config files from settings.php...\e[0m"
ddev exec cat >> web/sites/default/settings.local.php << EOF1
<?php

/**
 * @file
 * #custom-generated: Automatically generated Drupal settings file for local environments.
 */

// This specifies the default configuration sync directory.
if (defined('CONFIG_SYNC_DIRECTORY') && empty(\$config_directories[CONFIG_SYNC_DIRECTORY])) {
  \$config_directories[CONFIG_SYNC_DIRECTORY] = '../config/sync';
}
elseif (empty($settings['config_sync_directory'])) {
  \$settings['config_sync_directory'] = '../config/sync';
}

  \$settings['config_sync_directory'] = '../config/sync';

EOF1

ddev exec cat >> web/sites/default/settings.php << EOF2

// Local customization: Loads the settings.local below the settings.ddev default file.
if (file_exists(\$app_root . '/' . \$site_path . '/settings.local.php') && getenv('IS_DDEV_PROJECT') == 'true') {
  include \$app_root . '/' . \$site_path . '/settings.local.php';
}
EOF2

# Writes a new README file for project in root.
echo -e "    \e[1;4;31m8- Writing a new README file for project...\e[0m"
cat > README.md << EOF1
# $varkeyname
Welcome to the README file of the project $varkeyname.
EOF1
ddev start

# Builds the new Drupal Site and clears cache.
echo -e "    \e[1;4;31m9- Building the new Drupal 9 Site...\e[0m"
ddev exec drush si --site-name=$varkeyname --account-name=admin --account-pass=admin -y
ddev exec drush cr

# Installs some Drupal contrib modules and resources.
echo -e "    \e[1;4;31m10- Installing resources like Drush, Drupal Console and many others contrib modules...\e[0m"
## CLIs.
ddev composer require --dev drush/drush drupal/console 
## Basic contrib modules.
ddev composer require --dev drupal/admin_toolbar drupal/devel drupal/devel_entity_updates:^3.0 drupal/coffee
## Config related modules.
ddev composer require drupal/config_split drupal/config_update drupal/confi:^2.0@RC drupal/pathauto drupal/eu_cookie_compliance
ddev composer require drupal/menu_admin_per_menu drupal/total_control drupal/search_api drupal/taxonomy_access_fix
## Layout and content related modules.
ddev composer require drupal/bootstrap_layout_builder:^2.0@beta drupal/paragraphs drupal/classy_paragraphs
ddev composer require drupal/entity_reference_revisions drupal/ds drupal/ds_extras drupal/metatag
## Spam control.
ddev composer require drupal/honeypot drupal/captcha drupal/recaptcha
## Webform family.
ddev composer require drupal/webform:^6.0@alpha drupal/webform_views:^5.0@alpha
## Views related modules.
ddev composer require drupal/better_exposed_filters drupal/views_bootstrap drupal/views_bulk_operations:^3.9
ddev composer require drupal/views_infinite_scroll drupal/viewsreference:^2.0@beta 
## Users resources.
ddev composer require drupal/login_destination:^2.0@alpha drupal/config_perms:^2.0
## Language and translations resources.
 ddev composer require drupal/domain drupal/tmgmt 
## Enabling step by step in order to avoid global errors.
ddev exec drush en -y admin_toolbar admin_toolbar_tools admin_toolbar_links_access_filter
ddev exec drush en -y devel webprofiler devel_entity_updates coffee
ddev exec drush en -y pathauto menu_admin_per_menu total_control taxonomy_access_fix
ddev exec drush en -y config_split config_update config_update_ui config_import
ddev exec drush en -y paragraphs classy_paragraphs entity_reference_revisions entity_reference ds ds_extras metatag
ddev exec drush en -y layout_builder bootstrap_layout_builder
ddev exec drush en -y captcha honeypot recaptcha
ddev exec drush en -y webform webform_ui webform_views webform_templates webform_bootstrap
ddev exec drush en -y better_exposed_filters views_bootstrap views_bulk_operations views_infinite_scroll viewsreference
ddev exec drush en -y login_destination config_perms eu_cookie_compliance
ddev exec drush en -y domain 
ddev exec drush en -y domain_access,
ddev exec drush en -y domain_alias,
ddev exec drush en -y domain_config,
ddev exec drush en -y domain_config_ui,
ddev exec drush en -y domain_content,
ddev exec drush en -y domain_source
ddev exec drush en -y language,
ddev exec drush en -y config_translation,
ddev exec drush en -y content_translation,
ddev exec drush en -y locale,
ddev exec drush en -y tmgmt,
ddev exec drush en -y tmgmt_demo,
ddev exec drush en -y tmgmt_language_combination,
ddev exec drush en -y tmgmt_locale,
ddev exec drush en -y tmgmt_file,
ddev exec drush en -y tmgmt_local,
ddev exec drush en -y tmgmt_content,
ddev exec drush en -y tmgmt_config
ddev exec drush en -y tmgmt
ddev exec drush cr

# Enables subtheming in the Drupal installation.
echo -e "    \e[1;4;31m11- Enabling folders for subtheming... \e[0m"
ddev exec mkdir /var/www/html/docroot/themes/custom
ddev exec mkdir /var/www/html/docroot/themes/custom/custom_subtheme
ddev exec mkdir /var/www/html/docroot/themes/custom/custom_subtheme/js
ddev exec mkdir /var/www/html/docroot/themes/custom/custom_subtheme/css
ddev exec mkdir /var/www/html/docroot/themes/custom/custom_subtheme/less
ddev exec mkdir /var/www/html/docroot/themes/custom/custom_subtheme/templates
ddev exec cp /var/www/html/docroot/core/themes/bartik/logo.svg /var/www/html/docroot/themes/custom/custom_subtheme/

# Creates the custom subtheme basic scaffolding.
echo -e "    \e[1;4;31m12- Creating the info.yml file for subtheme... \e[0m"
ddev exec cat > docroot/themes/custom/custom_subtheme/custom_subtheme.info.yml << EOF1
name: Custom Drupal Subtheme
type: theme 
description: 'This is a custom Drupal Subtheme'
core_version_requirement: ^8 || ^9
# Father theme
base theme: bartik
# Library definition
libraries:
  - custom_subtheme/global-styling
  - custom_subtheme/global-scripts
EOF1
  
# Creates the libraries declaration.
echo -e "    \e[1;4;31m13- Doing the libraries declaration file for subtheme... \e[0m"
ddev exec cat > docroot/themes/custom/custom_subtheme/custom_subtheme.libraries.yml << EOF2
global-styling:
  version: 1.x 
  css:
    theme:
      css/custom_subtheme.css: {} 
global-scripts:
  version: 1.x 
  js:
    js/custom_subtheme.js: {}
  dependencies:   
    - core/jquery
    - core/drupal
    - core/drupalSettings
    - core/jquery.once
EOF2

# Builds the initial JavaScript file.
echo -e "    \e[1;4;31m14- Builds an initial JavaScript file for subtheme... \e[0m"
ddev exec cat > docroot/themes/custom/custom_subtheme/js/custom_subtheme.js << EOF3
/**
 * @file Main JS file for the theme.
 */
(function ($, Drupal){
  console.log('hi');
})(jQuery, Drupal);
EOF3

## Creates an initial empty file for CSS styling.
echo -e "    \e[1;4;31m15- Saving an initial empty file for CSS.. \e[0m"
touch docroot/themes/custom/custom_subtheme/css/custom_subtheme.css

## Put the Drupal instalation in dev mode turning off the cache system and enabling TWIG debug.
echo -e "    \e[1;4;31m16- Passing the Drupal installation to dev mode... \e[0m"
ddev exec cat > docroot/sites/default/services.yml << EOF4
parameters:
  session.storage.options:
    gc_probability: 1
    gc_divisor: 100
    gc_maxlifetime: 200000
    cookie_lifetime: 2000000
  twig.config:
    debug: true
    auto_reload: true
    cache: false
  renderer.config:
    required_cache_contexts: ['languages:language_interface', 'theme', 'user.permissions']
    auto_placeholder_conditions:
      max-age: 0
      contexts: ['session', 'user']
      tags: []
  http.response.debug_cacheability_headers: false
  factory.keyvalue:
    {}
  factory.keyvalue.expirable:
    {}
  filter_protocols:
    - http
    - https
    - ftp
    - news
    - nntp
    - tel
    - telnet
    - mailto
    - irc
    - ssh
    - sftp
    - webcal
    - rtsp
  cors.config:
    enabled: false
    allowedHeaders: []
    allowedMethods: []
    allowedOrigins: ['*']
    exposedHeaders: false
    maxAge: false
    supportsCredentials: false
EOF4

# Install and enable subtheme.
echo -e "    \e[1;4;31m17- Enabling subtheme as default active theme... \e[0m"
ddev exec drush then custom_subtheme
ddev exec drush config-set -y system.theme default custom_subtheme
ddev exec drush cr

# Creates the main custom .gitignore for project.
echo -e "    \e[1;4;31m18- Downloading the main custom gitignore file...\e[0m"
wget https://raw.githubusercontent.com/Solucionex/resources/main/gitignores/drupal9_lightning_gitignore
mv drupal9_lightning_gitignore .gitignore

# Exports an initial dump of the database and the config files.
echo -e "    \e[1;4;31m19- Saving the first database backup and config files...\e[0m"
date=$(date +"%Y-%m-%d")
ddev export-db --file=./backups/db_${varkeyname}_initial_$date.sql.gz
ddev exec drush cex --yes
git init

# Restarts launchs in browser and connects the new deploy.
echo -e "    \e[1;4;31m20- Launching the new deploy...\e[0m"
ddev start
ddev launch
ddev ssh